{"version":3,"file":"static/js/998.000fe82f.chunk.js","mappings":"qNAgBA,MAAMA,EAA0B,CAC9BC,MAAO,GACPC,KAAM,GACNC,SAAU,IAGNC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CL,MAAOI,EAAAA,KAEJE,IAAI,GACJC,IAAI,KACJC,SAAS,oCACZN,SAAUE,EAAAA,KAAaI,SAAS,qCAChCP,KAAMG,EAAAA,KAAaG,IAAI,OAqDzB,EAlDyBE,KACvB,MAAM,GAAEC,IAAOC,EAAAA,EAAAA,IAAYC,EAAAA,GAoB3B,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBAEFL,IAAMM,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,QAAOH,SAAC,oCAEzBC,EAAAA,EAAAA,KAACG,EAAAA,GAAM,CACLpB,cAAeA,EACfI,iBAAkBA,EAClBiB,SA3BeC,MACnBC,EAAkBC,KAEd,IADJ,UAAEC,GAAoCD,EAEtC,IACE,MAAME,GAAeC,EAAAA,EAAAA,IAAWC,EAAAA,GAAG,SAADC,OAAWlB,EAAE,iBACzCmB,EAAAA,EAAAA,IAAOJ,EAAc,IACtBH,EACHQ,WAAW,EACXpB,IAAIqB,EAAAA,EAAAA,OAER,CAAE,MAAOC,GACPC,QAAQC,IAAIF,EACd,CAEAR,GAAW,EAYgBT,UAEvBF,EAAAA,EAAAA,MAACsB,EAAAA,GAAI,CAAApB,SAAA,EACHC,EAAAA,EAAAA,KAACoB,EAAAA,GAAK,CAACC,KAAK,OAAOC,KAAK,QAAQC,YAAY,QAAQ/B,UAAQ,KAC5DQ,EAAAA,EAAAA,KAACoB,EAAAA,GAAK,CAACC,KAAK,OAAOC,KAAK,OAAOC,YAAY,iBAC3CvB,EAAAA,EAAAA,KAACoB,EAAAA,GAAK,CAACC,KAAK,OAAOC,KAAK,WAAWC,YAAY,WAAW/B,UAAQ,KAElEQ,EAAAA,EAAAA,KAAA,UAAQqB,KAAK,SAASG,UAAW9B,EAAGK,SAAC,qBAIrCC,EAAAA,EAAAA,KAACyB,EAAAA,GAAY,CAACH,KAAK,QAAQI,UAAU,SACrC1B,EAAAA,EAAAA,KAACyB,EAAAA,GAAY,CAACH,KAAK,OAAOI,UAAU,SACpC1B,EAAAA,EAAAA,KAACyB,EAAAA,GAAY,CAACH,KAAK,WAAWI,UAAU,eAG3C,C","sources":["pages/AllTodosPage.tsx"],"sourcesContent":["import { ErrorMessage, Field, Form, Formik, FormikHelpers } from \"formik\";\nimport { FC } from \"react\";\nimport * as yup from \"yup\";\nimport { db } from \"../firebase\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../redux/selectors\";\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { Link } from \"react-router-dom\";\nimport { nanoid } from \"@reduxjs/toolkit\";\n\nexport interface TodoData {\n  title: string;\n  text: string;\n  deadline: string;\n}\n\nconst initialValues: TodoData = {\n  title: \"\",\n  text: \"\",\n  deadline: \"\",\n};\n\nconst validationSchema = yup.object().shape({\n  title: yup\n    .string()\n    .min(3)\n    .max(100)\n    .required(\"A Title for new task is required\"),\n  deadline: yup.string().required(\"Deadline for new task is required\"),\n  text: yup.string().max(500),\n});\n\nconst AllTodosPage: FC = () => {\n  const { id } = useSelector(selectUser);\n\n  const handleSubmit = async (\n    todoData: TodoData,\n    { resetForm }: FormikHelpers<TodoData>\n  ) => {\n    try {\n      const userTodosRef = collection(db, `users/${id}/todos`);\n      await addDoc(userTodosRef, {\n        ...todoData,\n        completed: false,\n        id: nanoid(),\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    resetForm();\n  };\n\n  return (\n    <>\n      <h2>AllTodosPage</h2>\n\n      {!id && <Link to=\"/auth\">Please Sign in to create tasks</Link>}\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <Field type=\"text\" name=\"title\" placeholder=\"Title\" required />\n          <Field type=\"text\" name=\"text\" placeholder=\"Description\" />\n          <Field type=\"text\" name=\"deadline\" placeholder=\"Deadline\" required />\n\n          <button type=\"submit\" disabled={!id}>\n            Create new task\n          </button>\n\n          <ErrorMessage name=\"title\" component=\"div\" />\n          <ErrorMessage name=\"text\" component=\"div\" />\n          <ErrorMessage name=\"deadline\" component=\"div\" />\n        </Form>\n      </Formik>\n    </>\n  );\n};\n\nexport default AllTodosPage;\n"],"names":["initialValues","title","text","deadline","validationSchema","yup","shape","min","max","required","AllTodosPage","id","useSelector","selectUser","_jsxs","_Fragment","children","_jsx","Link","to","Formik","onSubmit","async","todoData","_ref","resetForm","userTodosRef","collection","db","concat","addDoc","completed","nanoid","error","console","log","Form","Field","type","name","placeholder","disabled","ErrorMessage","component"],"sourceRoot":""}